{"version":3,"sources":["services/dataService.js","components/personForm.js","components/person.js","components/persons.js","components/filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","PersonForm","props","onChange","handleNewName","value","newName","handleNumber","number","onClick","handleSubmit","type","Person","personArray","map","person","i","key","name","window","confirm","dataService","catch","e","console","log","setErrorMessage","setTimeout","then","returnedData","setPersons","persons","filter","Persons","filterValue","searchResults","Filter","handleFilterName","Notification","message","status","className","App","useState","setNewName","setNumber","setFilterValue","setSearchResults","errorMessage","useEffect","response","data","search","filtered","o","toLowerCase","includes","target","preventDefault","length","some","find","p","concat","error","Index","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3faf8e0.chunk.js","sourcesContent":["import axios from 'axios';\n//to run locally\n//const baseUrl = 'http://localhost:3001/persons' \nconst baseUrl = '/api/persons'\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst deletePerson =(id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, deletePerson}\n","import React from \"react\";\n\nconst PersonForm = (props) => {\n  return (\n    <div>\n      <form>\n        <div>\n          name: <input onChange={props.handleNewName} value={props.newName} />\n        </div>\n\n        <div>\n          number: <input onChange={props.handleNumber} value={props.number} />\n        </div>\n        <div>\n          <button onClick={props.handleSubmit} type=\"submit\">\n            add\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\nimport dataService from \"../services/dataService\";\n\nconst Person = (props) => {\n  const handleDelete = (name, id) => {\n    if (window.confirm(`Delete ${name} ?`)) {\n      dataService\n        .deletePerson(id)\n        .catch((e) => {\n          console.log(e);\n          props.setErrorMessage(\n            `Information of ${name} has already been removed from server`,\n            \"error\"\n          );\n          setTimeout(() => {\n            props.setErrorMessage(null);\n          }, 5000);\n        })\n        .then((returnedData) => {\n          props.setPersons(props.persons.filter((i) => i.name !== name));\n        });\n    }\n  };\n  return (\n    <div>\n    {props.personArray.map((person, i) => (\n        <p key={i}>\n          {person.name} {person.number}{\" \"}\n          <button onClick={() => handleDelete(person.name, person.id)}>\n            Delete\n          </button>\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\nimport Person from './person';\n\nconst Persons = (props) => {\n  return (\n    <div>\n      {props.filterValue ? (\n        <Person personArray={props.searchResults} setErrorMessage={props.setErrorMessage}\n        setPersons={props.setPersons}\n        persons={props.persons}\n        />\n      ) : (\n        <Person personArray={props.persons} setErrorMessage={props.setErrorMessage}\n        setPersons={props.setPersons}\n        persons={props.persons}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Persons;\n","import React from 'react';\n\nconst Filter = (props) => {\n  return(\n    <div>\n    filter shown with \n    <input onChange={props.handleFilterName} value={props.filterValue} />\n  </div>\n  )\n};\n\nexport default Filter;","import React from 'react';\n\nconst Notification = ({message, status}) => {\n  \n  if(status === 'error'){\n    return(\n      <div className='error'>\n      {message}\n      </div>\n    );\n  }\nreturn(\n  <div className='message'>\n  {message}\n  </div>\n);\n}\n\nexport default Notification;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport dataService from \"./services/dataService\";\nimport PersonForm from \"./components/personForm\";\nimport Persons from \"./components/persons\";\nimport Filter from \"./components/filter\";\nimport Notification from './components/Notification';\n\nimport './App.css';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [filterValue, setFilterValue] = useState(\"\");\n  const [searchResults, setSearchResults] = useState(\"\");\n  const [errorMessage, setErrorMessage]= useState('');\n\n  useEffect(() => {\n    dataService.getAll().then((response) => {\n      console.log('response ',response.data)\n      setPersons(response.data);\n    });\n  }, [newName, number]);\n\n  const handleNewName = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumber = (e) => {\n    setNumber(e.target.value);\n  };\n  const handleFilterName = (e) => {\n    const value = e.target.value;\n    setFilterValue(value.toLowerCase());\n    search(filterValue);\n  };\n  const search = (value) => {\n    let filtered = persons.filter((o) => o.name.toLowerCase().includes(value));\n    setSearchResults(filtered);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (newName.length > 0 && number.length > 0) {\n      if (\n        persons.some(\n          (person) => person.name.toLowerCase() === newName.toLowerCase()\n        )\n      ) {\n        if (\n          window.confirm(\n            `${newName} is already added to phonebook, replace the old number with a new one`\n          )\n        ) {\n          const data = persons.find(\n            (p) => p.name.toLowerCase() === newName.toLowerCase()\n          );\n\n          dataService.update(data.id, { name: newName, number: number }).then(()=>{\n            setErrorMessage(`Edited ${newName}`, 'success');\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n          });\n        }\n        setNewName(\"\");\n        setNumber(\"\");\n      } else {\n        //setPersons(persons.concat({ name: newName, number: number }));\n        dataService\n          .create({ name: newName, number: number })\n          .then((returnedData) => {\n            setPersons(persons.concat(returnedData));\n            setErrorMessage(`Added ${newName}`, 'success');\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n            setNewName(\"\");\n            setNumber(\"\");\n          }).catch(error => {\n            // this is the way to access the error message\n            console.log(error.response.data)\n            .then(()=>{\n              setErrorMessage(`error.response.data`);\n              setTimeout(() => {\n                setErrorMessage(null)\n              }, 5000)\n            });\n          });\n          \n      }\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {errorMessage && <Notification message={errorMessage}/>}\n      <Filter handleFilterName={handleFilterName} filterValue={filterValue} />\n      <h3>Add a new </h3>\n      <PersonForm\n        handleNewName={handleNewName}\n        newName={newName}\n        handleNumber={handleNumber}\n        number={number}\n        handleSubmit={handleSubmit}\n      />\n\n      <h3>Numbers</h3>\n      <Persons\n        filterValue={filterValue}\n        searchResults={searchResults}\n        setErrorMessage={setErrorMessage}\n        setPersons={setPersons}\n        persons={persons}\n      />\n     \n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from 'react-dom';\nimport App from './App';\nconst Index = () => {\n  return (\n    <div>\n      <App />\n    </div>\n  );\n};\n\nReactDom.render(<Index />, document.getElementById(\"root\"));\n"],"sourceRoot":""}